name: Merge Queue Pipeline

# This workflow conditionally runs which workflows should run as part of the merge queue pipeline
# Since this gets invoked for every pull request attempting to merge with the target branch ('dev')
# it is required to run and cannot be skipped using GA event paths.

on:
  merge_group:
  pull_request:
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    if: github.event_name == 'merge_group'
    outputs:
      server: ${{ steps.filters.outputs.server }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v3
        id: filters
        with:
          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}
          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
          filters: |
            server:
              - 'server/**'

  server-ci:
    needs: changes
    if: ${{ needs.changes.outputs.server == 'true' }}
    uses: ./.github/workflows/server-ci-tests.yml

# This is the job we use as the required status check in the branch protection settings, use it to refer
# to additional jobs which can reference separate workflows via `needs: [required-job]`. It will be skipped
# (which GitHub Actions considers a passing/successful status check) unless one of the needs jobs fails or
# is cancelled. It does not consider a skipped needs job a failure which ultimately allows us to run this on
# all PRs and quickly pass for any with changes that don't need to trigger parts of the pipeline
  merge-queue-pipeline:
    name: Merge Queue Pipeline
    if: github.event_name == 'merge_group' && (cancelled() || failure())
    needs: [changes, server-ci]
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Some workflows have failed!"
          exit 1
